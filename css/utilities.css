/* set max-width, padding to keep from going all the way to far left side when browser is stretched*/
.container {
    max-width: 1100px;
    margin: 0 auto;
    overflow: auto;
    padding: 0 40px;
}

/*use box-shadow to make the card look like its floating or 3d: horizontal offset, vertical offset, blur, rgba color with transparency*/
.card {
    background-color: #fff;
    color: #333;
    border-radius: 10px;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.2);
    padding: 20px;
    margin: 10px;
}

/*style buttons & links*/
.btn {
    display: inline-block;
    padding: 10px 30px;
    cursor: pointer;
    background: var(--primary-color);
    color: #fff;
    border: none;
    border-radius: 5px;
}

.btn-outline {
    background-color: transparent;
    border: 1px #fff solid;
}

/*make the buttons slightly smaller when hover*/
.btn:hover {
    transform: scale(0.98);
}


/*Backgrounds & colored buttons*/
.bg-primary, 
.btn-primary {
    background-color: var(--primary-color);
    color: #fff;
}

.bg-secondary, 
.btn-secondary {
    background-color: var(--secondary-color);
    color: #fff;
}

.bg-dark, 
.btn-dark {
    background-color: var(--dark-color);
    color: #fff;
}

/*make the links & icons white*/
.bg-primary a, 
.btn-primary a,
.bg-secondary a, 
.btn-secondary a,
.bg-dark a, 
.btn-dark a {
    color: #fff;
} 

/* Text Colors */
.text-primary {
    color: var(--primary-color);
}

.text-secondary, {
    color: var(--secondary-color);
}

.text-dark {
    color: var(--dark-color);
}

.text-light {
    color: var(--light-color);
}

/* Text sizes*/
.lead {
    font-size: 20px;
}
/*1rem is 16px*/
.sm {
    font-size: 1rem;
}

.md {
    font-size: 2rem;
}

.lg {
    font-size: 3rem;
}

.xl {
    font-size: 4rem;
}


.text-center {
    text-align: center;
}

/*Alert*/
.alert {
    background-color: var(--light-color);
    padding: 10px 20px;
    font-weight: bold;
    margin: 15px 0;
}

.alert i {
    margin-right: 10px;

}

.alert-success {
    background-color: var(--success-color);
    color: #fff;

}
.alert-error {
    background-color: var(--error-color);
    color: #fff;

}

/*make the nav class a flex, row is default; use justify-content to align the main axis, align-items applies to cross-axis, make height 100% of the container*/
.flex {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
}

/*Grid Utility Class: align side by side by adding grid-template column property & set 
the width using percentages or fractions (fr); 1fr 1fr is equal width or repeat(2, 1fr) reads repeat twice, 1fr; gap is grid-gap; set height to 100% of cotainer which has a set height value*/
.grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 20px;
    justify-content: center;
    align-items: center;
    height: 100%;
}

.grid-3 {
    grid-template-columns: repeat(3, 1fr);
}


/* Margin */
.my-1 {
    margin: 1rem 0;
}

.my-2 {
    margin: 1.5rem 0;
}

.my-3 {
    margin: 2rem 0;
}

.my-4 {
    margin: 3rem 0;
}

.my-5 {
    margin: 4rem 0;
}

/* Margin all around*/
.m-1 {
    margin: 1rem;
}

.m-2 {
    margin: 1.5rem;
}

.m-3 {
    margin: 2rem;
}

.m-4 {
    margin: 3rem;
}

.m-5 {
    margin: 4rem;
}

/* Padding */
.py-1 {
    padding: 1rem 0;
}

.py-2 {
    padding: 1.5rem 0;
}

.py-3 {
    padding: 2rem 0;
}

.py-4 {
    padding: 3rem 0;
}

.py-5 {
    padding: 4rem 0;
}

/* Padding all around*/
.p-1 {
    padding: 1rem;
}

.p-2 {
    padding: 1.5rem;
}

.p-3 {
    padding: 2rem;
}

.p-4 {
    padding: 3rem;
}

.p-5 {
    padding: 4rem;
}